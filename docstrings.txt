"""
Brief Description: So there has been built an Enemy class that will store 3 methods that 
we will be using such as the __init__ method that will initialize the monsters_name, 
monsters_type, monsters_health, monsters_speed and monsters_strength and the maxhealth 
of the enemy. We will be setting this in the near future allowing the monster to be created.
These will be the attributes being used
Attributes: 
monsters_name (str) - this will be the monsters name
monsters_type (str) - this iwll be the the type of monster that a player wants to battle
monsters_health (int) - this will be the monsters health after it has been attacked
monsters_speed (int) - this will be the ability of the monsters speed
monsters_strength (float) - this will be the monsters strength.
"""
class Enemy:
        """
            Args: 
                monsters_name (str) - this will be the monsters name
                monsters_type (str) - this iwll be the the type of monster that a player wants to battle
                monsters_health (int) - this will be the monsters health after it has been attacked
                monsters_speed (int) - this will be the ability of the monsters speed
                monsters_strength (float) - this will be the monsters strength.
        """
        def __init__(self, monsters_name, monsters_type, monsters_health, monsters_speed, monsters_strength, \
        maxhealth):
            """
                Args: 
                    self - which references self represents the instance of the class. By using the self
                    keyword we can access the attributes and methods of the class in python
                
                Explaination: 
                    created a list called monsters which will hold all of the monsters 
                    that we have allocated within the list and that we are going to use 
                    within the maze.
                    here we are referencing the monsters_name which will then
                    grab a monster randomly using the randint function between 0-7 
                    so anyone one of them from the list.
                    - we are then setting the monsters type to either be 1 or 2 this will 
                    be determined by randomizer.
                    - monsters_health is then set at 100 and based on the attack and damage
                    the health level will increase.
                    - write a conditional that will determine strength or speed, depending
                    on whether the randomizer chose 1 or 2 as the monster to fight the player. 

            """
            self.monsters_name = monsters_name
            self.monsters_type = monsters_type
            self.monsters_health = monsters_health
            self.monsters_speed = monsters_speed
            self.monsters = monsters_strength 
            self.maxhealth = maxhealth
        def buildEnemy(self):
            monsters = ["Aaragorn", "Legolas", "Gimli", "Gandalf", "Golum", "Dufus", "Rico", "Joker"]
            self.monsters_name = monsters[randint(0,7)]
            self.monsters_type = randint(1,2)
            self.monsters_health = 100

            if self.monsters_type == 1:
                self.monsters_strength = randint(70,90)
                self.monsters_speed = randint(50,70)
            elif self.monsters_type == 2:
                self.monsters_strength = randint(50,70)
                self.monsters_speed = randint(70,90)

    #getting the information
        def getEnemy(self):
            self.monsterSTATS = [self.monsters_name, self.monsters_type, self.monsters_strength, self.monsters_speed, self.monsters_health]
            return self.monsterSTATS

    #so far this is what i have!
        def battle_monsters(player, monster):
            if player.maxhealth == 0 and monster.maxhealth > player.maxhealth:
                print(f"{monster.monsters_name} has won the battle against {player.name}!")
            elif(monster.maxhealth == 0 and player.maxhealth > monster.maxhealth):
                print(f"{player.name} won and {monster.monsters_name} has been defeated!")
            elif(player.maxhealth == 0 and monster.maxhealth == 0):
                print()
                print(f"{player.name} and {monster.monsters_name} has made amends!") 